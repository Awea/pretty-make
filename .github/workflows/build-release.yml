name: release
on:
  push:
    branches:
      - "**"
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            rust: nightly
            target: x86_64-unknown-linux-musl
          - build: macos
            os: macos-latest
            rust: nightly
            target: x86_64-apple-darwin
          - build: macos-arm
            os: macos-latest
            rust: nightly
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v5

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: pretty-make-${{ matrix.build }}
          path: target/${{ matrix.target }}/release/pretty-make

  create-release:
    name: create-release
    needs: ["build"]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
      - run: |
          ls -l
          mv -v pretty-make-linux/pretty-make pretty-make-linux/pretty-make-linux
          mv -v pretty-make-macos/pretty-make pretty-make-macos/pretty-make-macos
          mv -v pretty-make-macos-arm/pretty-make pretty-make-macos-arm/pretty-make-macos-arm
      - id: get_tag
        run: |
          echo "name=SOURCE_TAG::${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - uses: softprops/action-gh-release@v1
        with:
          name: Pretty Make ${{ steps.get_tag.outputs.SOURCE_TAG }}
          files: |
            pretty-make-linux/*
            pretty-make-macos/*
            pretty-make-macos-arm/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-crate:
    name: publish-crate
    needs: ["build"]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
