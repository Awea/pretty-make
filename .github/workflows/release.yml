name: release
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-release:
    name: build-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - build: linux
          os: ubuntu-18.04
          rust: nightly
          target: x86_64-unknown-linux-musl
        - build: macos
          os: macos-latest
          rust: nightly
          target: x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

      - uses: actions/upload-artifact@v1
        with:
          name: pretty-make-${{ matrix.build }}
          path: target/${{ matrix.target }}/release/pretty-make

  add-binaries-to-release:
    name: add-binaries-to-release
    needs: ['build-release']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
      - run: |
          ls -l
          mv -v pretty-make-linux/pretty-make pretty-make-linux/pretty-make-linux
          mv -v pretty-make-macos/pretty-make pretty-make-macos/pretty-make-macos
      - uses: softprops/action-gh-release@v1
        with:
          name: Pretty Make ${{ github.ref }}
          files: |
            pretty-make-linux/*
            pretty-make-macos/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-crate:
    name: publish-crate
    needs: ['build-release']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
      - uses: katyo/publish-crates@v1
        with:
            registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
